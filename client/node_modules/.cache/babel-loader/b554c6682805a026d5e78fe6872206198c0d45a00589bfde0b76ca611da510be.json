{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_SERVERURL}${url}`);\n        setData(res.data);\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [url]);\n  const reFetch = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_SERVERURL}${url}`);\n      setData(res.data);\n    } catch (error) {\n      setError(error);\n    }\n    ;\n    setLoading(false);\n  };\n  return {\n    data,\n    loading,\n    error,\n    reFetch\n  };\n};\n_s(useFetch, \"Oicl48iGuYykLyvnN5ILs6bqZ0Y=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","axios","useFetch","url","_s","data","setData","loading","setLoading","error","setError","fetchData","res","get","process","env","REACT_APP_SERVERURL","reFetch"],"sources":["C:/Users/Said Solsaev/Documents/GitHub/fullstack-food-ordering/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            \r\n            try {\r\n                const res = await axios.get(`${process.env.REACT_APP_SERVERURL}${url}`);\r\n                setData(res.data)\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            setLoading(false)\r\n        };\r\n        fetchData();\r\n    }, [url])\r\n\r\n    const reFetch = async () => {\r\n        setLoading(true);  \r\n        \r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_SERVERURL}${url}`);\r\n            setData(res.data)\r\n        } catch (error) {\r\n            setError(error);\r\n        };\r\n        setLoading(false);\r\n    };\r\n\r\n    return {data, loading, error, reFetch};\r\n};\r\n\r\nexport default useFetch;\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAIzCD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BH,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,MAAMI,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,GAAEb,GAAI,EAAC,CAAC;QACvEG,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;MACnB;MACAD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,MAAMc,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxBT,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMI,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,mBAAoB,GAAEb,GAAI,EAAC,CAAC;MACvEG,OAAO,CAACM,GAAG,CAACP,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC;IACnB;IAAC;IACDD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAACH,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEQ;EAAO,CAAC;AAC1C,CAAC;AAACb,EAAA,CAnCIF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}